name: iOS Release CD

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  release-ios:
    name: Release IPA on Firebase App Distribution
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Create .env from secret
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Install dependencies
        run: flutter pub get

      - name: Generate riverpod & freezed code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Install provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_MOBILEPROVISION }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/athleteiq.mobileprovision

      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      - name: Install bundle dependencies
        run: |
          cd ios
          bundle install

      - name: Build and sign IPA with Fastlane
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: |
          cd ios
          bundle exec fastlane build_and_sign

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Upload IPA to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/firebase_key.json
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > $GOOGLE_APPLICATION_CREDENTIALS
          firebase appdistribution:distribute ios/Runner.ipa \
            --app ${{ secrets.FIREBASE_APP_ID_IOS }} \
            --release-notes "New AthleteIQ IPA build via GitHub Actions" \
            --groups "testers"
