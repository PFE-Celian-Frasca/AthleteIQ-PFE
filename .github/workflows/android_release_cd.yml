name: Android Release CD

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  release-android:
    name: Release APK on Firebase App Distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle
            android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Set up Flutter with cache
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'
          cache: true

      - name: Create .env from secret
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Install dependencies
        run: flutter pub get

      - name: Generate riverpod & freezed code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: Accept Android SDK licenses
        run: yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Build APK (no-sign)
        run: flutter build apk --release --obfuscate --split-debug-info=build/obf/

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Upload APK to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/firebase_key.json
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > $GOOGLE_APPLICATION_CREDENTIALS
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
            --app ${{ secrets.FIREBASE_APP_ID_ANDROID }} \
            --release-notes "New AthleteIQ APK build via GitHub Actions" \
            --groups "testers"
